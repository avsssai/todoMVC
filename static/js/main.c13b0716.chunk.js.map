{"version":3,"sources":["Todo.js","Todos.js","TodoAdder.js","Footer.js","Links.js","App.js","serviceWorker.js","index.js"],"names":["Todo","state","isEditing","editValue","props","value","todo","hover","handleChange","event","setState","target","handleEdit","id","enterEntered","key","handleDoubleClick","console","log","index","this","deleteEntry","completeTodo","strikeOffStyle","completed","color","textDecoration","status","style","className","type","onChange","name","onKeyDown","onBlur","autoFocus","onClick","onDoubleClick","aria-hidden","Component","Todos","filterData","chosenData","todos","filter","todoDisplay","map","i","TodoAdder","initialState","e","handleSubmit","enteredEnter","keyCode","preventDefault","toggleAll","toggleAllClass","length","background","autoComplete","placeholder","Footer","chooseData","clearCompleted","todosLeftToComplete","all","active","completedButtonClass","phrasing","FooterSection","showSectionClass","Links","href","App","counter","completeAll","newTodo","updatedTodos","deletedArr","dataFilter","newTodos","completedTodo","find","el","editedValue","clone","editedTodo","completeAllTodos","incompleteTodos","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c13b0716.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Todo extends Component {\n  state = {\n    isEditing: false,\n    editValue: this.props.value.todo,\n    hover: false,\n  };\n  handleChange = (event) => {\n    this.setState({\n      editValue: event.target.value,\n    });\n  };\n  handleEdit = (event) => {\n    this.props.handleEdit(this.state.editValue, this.props.id);\n    this.setState({ isEditing: false });\n  };\n  enterEntered = (event) => {\n    if (event.key === \"Enter\") {\n      this.handleEdit();\n    }\n  };\n\n  handleDoubleClick = () => {\n    this.setState({ isEditing: true });\n    console.log(this.props.id,this.props.index)\n  };\n\n  render() {\n    let { value, deleteEntry,completeTodo,id } = this.props;\n    let { isEditing, editValue } = this.state;\n    let strikeOffStyle = value.completed\n      ? { color: \"gray\", textDecoration: \"line-through\" }\n      : { color: \"black\", textDecoration: \"none\" };\n\n    let status = value.completed ? (\n      <div style={{ color: \"green\" }}>&#10003;</div>\n    ) : (\n      \"\"\n    );\n    // let displayDeleteButton = this.state.hover\n    //   ? \"delete-todo\"\n    //   : \"delete-todo-hide\";\n\n    let displayTodo;\n    if (!isEditing) {\n      displayTodo = (\n        <div\n          className=\"todo\"\n        >\n          <div className=\"completeTodo\" onClick={() => completeTodo(id)}>\n            {status}\n          </div>\n\n          <span\n            style={strikeOffStyle}\n            className=\"todo-text\"\n            onDoubleClick={this.handleDoubleClick}\n          >\n            {value.todo}\n          </span>\n          <div className=\"edit-button\" onClick={()=>this.handleDoubleClick(id)}> \n            <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n\n          </div>\n          <div\n            className=\"delete-todo\"\n            onClick={() => deleteEntry(id)}\n          >\n            &#10005;\n          </div>\n        </div>\n      );\n    } else {\n      displayTodo = (\n        <div className=\"todo\">\n          <input\n            type=\"text\"\n            onChange={this.handleChange}\n            value={editValue}\n            name=\"edit\"\n            className=\"edit-input\"\n            onKeyDown={this.enterEntered}\n            onBlur={this.handleEdit}\n            autoFocus\n          />\n        </div>\n      );\n    }\n    return displayTodo;\n  }\n}\nexport default Todo;\n","import React, { Component } from \"react\";\nimport Todo from \"./Todo\";\n\nclass Todos extends Component  {\n  filterData = (type) => {\n    let chosenData;\n    switch (type) {\n      case \"Active\":\n        chosenData = this.props.todos.filter(todo => !todo.completed);\n        break;\n      case \"Completed\":\n        chosenData = this.props.todos.filter(todo => todo.completed);\n        break;\n      case \"All\":\n      default:\n        chosenData = this.props.todos;   \n        break;\n    }\n    return chosenData;\n  }\n\n  render(){\n  let {deleteEntry, completeTodo, handleEdit,filter} = this.props;\n\n  \n  let todoDisplay = this.filterData(filter).map((todo, i) => {\n    return (\n      <Todo\n        key={todo.id}\n        value={todo}\n        deleteEntry={deleteEntry}\n        completeTodo={completeTodo}\n        index={i}\n        id={todo.id}\n        handleEdit={handleEdit}\n        handleDoubleClick={this.handleDoubleClick}\n      />\n    );\n  });\n  return <div className=\"todoDisplay\">{todoDisplay}</div>;\n}\n};\nexport default Todos;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass TodoAdder extends Component {\n  initialState = {\n    todo: \"\",\n    completed: false,\n  };\n  state = this.initialState;\n\n  handleChange = (e) => {\n    this.setState({\n      todo: e.target.value,\n    });\n  };\n  handleSubmit = () => {\n    this.props.handleSubmit(this.state);\n    this.setState(this.initialState);\n  };\n  enteredEnter = (event) => {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      this.handleSubmit();\n    }\n  };\n  toggleAll = () => {\n    this.props.toggleAll();\n  }\n  render () {\n    let { todo } = this.state;\n    let todosLength = this.props.todos.length;\n    let toggleAllClass\n    if(todosLength > 0) {\n      toggleAllClass = 'toggle-all-button';\n    }else{\n       toggleAllClass = 'toggle-all-hide' \n    }\n    return (\n      <form className='input'>\n        <label className={toggleAllClass} onClick={this.toggleAll} style={{background:\"white\"}}>&#10003;</label>\n\n        <input\n          type=\"text\"\n          className=\"new-todo\"\n          autoComplete=\"off\"\n          name=\"todo\"\n          onChange={this.handleChange}\n          value={todo}\n          onKeyDown={this.enteredEnter}\n          style={{background:\"white\"}}\n          placeholder=\"What needs to be done?\"\n        />\n\n      </form>\n    );\n  }\n}\nexport default TodoAdder;\n","import React from 'react';\n\nconst Footer = (props) => {\n  let { todos, chooseData, filter, clearCompleted } = props;\n  let todosLeftToComplete = todos.filter(todo => {\n    return !todo.completed\n  });\n  let todosCompleted = todos.filter(todo => {\n    return todo.completed;\n  })\n  let all = 'active',\n    active = '',\n    completed = '';\n\n  if (filter === 'All') {\n    all = 'active';\n    active = '';\n    completed = '';\n  } else if (filter === 'Active') {\n    all = '';\n    active = 'active';\n    completed = '';\n  } else if (filter === 'Completed') {\n    all = '';\n    active = '';\n    completed = 'active';\n  }\n  let completedButtonClass = todosCompleted.length > 0 ? 'clear-complete' : 'clear-complete hide';\n\n  let phrasing = todosLeftToComplete.length === 1 ? 'todo' : 'todos'\n  let FooterSection = (<div className='Footer'>\n    <div className=\"todos-left\">{todosLeftToComplete.length} <span className=\"mobile-hide\">{phrasing}</span> left</div>\n    <div className=\"nav-buttons\">\n      <div className={`all ${all}`} onClick={() => chooseData(\"All\")} >All</div>\n      <div className={`active-elements ${active}`} onClick={() => chooseData(\"Active\")}>Active</div>\n      <div className={`completed ${completed}`} onClick={() => chooseData(\"Completed\")}>Completed</div>\n    </div>\n    <button className={completedButtonClass} onClick={clearCompleted}>Clear completed</button>\n\n  </div>\n  )\n  let showSectionClass = todos.length > 0 ? FooterSection : '';\n  return (\n    <div>{showSectionClass}</div>\n  )\n}\nexport default Footer;","import React from 'react';\n\nconst Links = (props) => {\n    return (\n        <div className=\"Links\">\n            <div className=\"double-click-help\">Double click to edit a todo.</div>\n            <div>Created by <a href=\"https://github.com/avsssai\">Siva Addanki</a></div>\n            <div className=\"desc\"> <span>A React implementation of todoMVC.</span> &#8226;\n                <span>\n                    <a className=\"github\" href=\"https://github.com/avsssai/todoMVC\">github repo</a>\n                </span>\n            </div>\n        </div>\n    )\n}\nexport default Links;","import React, { Component } from 'react';\nimport './App.css';\nimport Todos from './Todos';\nimport TodoAdder from './TodoAdder';\nimport Footer from './Footer';\nimport Links from './Links';\n\nclass App extends Component {\n  state = {\n    todos:[],\n    counter:1,\n    filter:\"All\",\n    completeAll:true\n  };\n\n  chooseData = (type) => {\n    this.setState({filter:type})\n  }\n\n  handleSubmit = (newTodo) => {\n    if(newTodo.todo === '') return;\n    newTodo.id = this.state.counter;\n    let updatedTodos = [...this.state.todos, newTodo];\n    this.setState({todos:updatedTodos,counter:this.state.counter+1});\n  }\n\n  deleteEntry = (id) => {\n    let clone = [...this.state.todos];\n    let deletedArr = clone.filter(todo => todo.id !== id);\n    this.setState({\n      todos:deletedArr,\n      dataFilter:this.state.todos\n    });\n    this.chooseData(this.state.filter); //this.chooseData(whateverTabWeAreOn);\n\n  }\n\n  completeTodo = (id) => {\n    let newTodos = [...this.state.todos];\n    let completedTodo = newTodos.find((el) => {\n      return el.id === id;\n    });\n    completedTodo.completed = !completedTodo.completed;\n    this.setState({todos:newTodos})\n    console.log(completedTodo);\n    console.log(newTodos);\n    this.chooseData(this.state.filter); //this.chooseData(whateverTabWeAreOn);\n\n}\n\n  handleEdit = (editedValue,id) =>{\n    let clone = [...this.state.todos];\n    let editedTodo = clone.find((el) => {\n      return el.id === id;\n    });\n    if(editedValue === '') {\n      editedValue = editedTodo.todo;\n    }\n    editedTodo.todo = editedValue;\n    console.log(editedTodo,editedValue);\n    this.setState({todos:clone});\n  }\n\n  toggleAll = () => {\n    let clone = [...this.state.todos];\n    let completeAllTodos = clone.map(el => {\n      el.completed = this.state.completeAll;\n      return el;\n    });\n    this.setState({todos:completeAllTodos,completeAll:!this.state.completeAll});\n  }\n\n  clearCompleted = () => {\n    let clone = [...this.state.todos];\n    let incompleteTodos = clone.filter(todo => !todo.completed);\n    this.setState({todos:incompleteTodos});\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className='App-header'>todos</header>\n        <TodoAdder handleSubmit={this.handleSubmit} toggleAll={this.toggleAll} todos={this.state.todos}></TodoAdder>\n        <Todos todos={this.state.todos} deleteEntry={this.deleteEntry} completeTodo={this.completeTodo}\n          handleEdit={this.handleEdit}\n          filter={this.state.filter}\n          className=\"todos\"\n        />\n        <Footer todos={this.state.todos} chooseData={this.chooseData} filter={this.state.filter} clearCompleted={this.clearCompleted}/>\n        <Links />\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}